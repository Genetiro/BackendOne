openapi: 3.0.3
info:
  title: Пример спецификации
  version: 1.0.0 <- версия описываемого API
paths:
  
  /order:
    post:
      tags:
        - order
      summary: new order
      description: Add a new order
      operationId: addOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input
    get:
      tags:
        - order
      summary: Filter orders
      description: filter orders by ship date
      operationId: getOrderByDate
      parameters:
        - name: next_shipDate
          in: query
          description: nearest ship date
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid date range
          content: {}
      security:
        - api_key: []
  /order/{orderId}:
    put:
      tags:
        - order
      summary: edit order
      description: edit order by id
      operationId: editOrder
      parameters:
        - name: petId
          in: path
          description: ID of order that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: quantity
          in: query
          description: quantity of items in order
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: Status of order that needs to be updated
          schema:
            type: string
      security:
      - api_key: []
    get:
      tags:
        - order
      summary: get order by id
      description: find order by id
      operationId: getOrderById
      parameters: 
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
      - api_key: []
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: available
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
